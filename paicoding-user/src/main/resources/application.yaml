server:
  port: 8200

env:
  name: dev

spring:
  application:
    name: paicoding-user
  datasource: #单数据源
    url: jdbc:mysql://192.168.56.102:3306/${database.name}?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: 123456
  main:
    # 引入下面这个配置，主要是为了解决自定义实现的多数据源功能，自主注册的datasource替换默认的
    allow-bean-definition-overriding: true
    allow-circular-references: true
  mvc:
    async:
      request-timeout:
  liquibase:
    change-log: classpath:liquibase/master.xml
    enabled: true # 当实际使用的数据库不支持liquibase，如 mariadb 时，将这个参数设置为false
  mail:
    host: smtp.163.com
    from: xhhuiblog@163.com
    # 使用自己的发送方用户名 + 授权码填充
    username:
    password:
    default-encoding: UTF-8
    port: 465
    properties:
      mail:
        smtp:
          socketFactory:
            port: 465
            class: javax.net.ssl.SSLSocketFactory
            fallback: false
          auth: true
          starttls:
            enable: true
            required: true
  alarm:
    # 接收报警的用户邮箱，多个人时，使用英文逗号分隔
    user: xhhuiblog@163.com

paicoding:
  sensitive: # 敏感词校验相关配置
    enable: true
    deny: # 自定义的敏感词，英文逗号分割
    allow: 国,制作,码,亚洲,中国,公司,简历,性,国研,鬼,国庆,用户,扑克 # 自定义的非敏感词，英文逗号分割
  jwt:
    issuer: pai_coding # 签发者
    secret: hello_world # 签名密钥
    expire: 2592000000 # jwt的有效期，默认30天

security:
  salt: tech_π # 密码加盐, 更安全的做法是每个用户的密码使用独立的盐，并将其保存在用户表中
  salt-index: 3 # 盐插入的位置


